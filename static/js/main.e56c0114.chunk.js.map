{"version":3,"sources":["ColorModeSwitcher.js","Card.js","Footer.js","Home.js","App.js","index.js"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","Card","iconURL","weatherDescription","description","borderWidth","borderRadius","overflow","boxShadow","p","as","fontWeight","cityName","countryName","pt","toUpperCase","src","alt","isTruncated","temp","tempMin","tempMax","feelsLike","pressure","humidity","Footer","href","isExternal","ExternalLink","mx","Home","useState","locationName","setLocationName","locationsData","setLocationData","getWeather","a","axios","get","process","response","data","console","log","message","py","lineHeight","w","onSubmit","event","preventDefault","direction","children","type","value","onChange","e","target","required","autoFocus","colorScheme","columns","spacing","mt","map","locationData","name","sys","country","main","feels_like","temp_min","temp_max","weather","id","App","theme","justifySelf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e56c0114.chunk.js","sourcesContent":["import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import React from 'react';\nimport {\n  Box,\n  HStack,\n  Heading,\n  Text,\n  Image,\n  Spacer,\n  Divider,\n} from '@chakra-ui/react';\nimport { MdLocationOn } from 'react-icons/md';\nimport { FaTemperatureLow, FaTemperatureHigh } from 'react-icons/fa';\nimport { RiCloudyFill, RiDropFill } from 'react-icons/ri';\nimport { IoIosSpeedometer } from 'react-icons/io';\n\nconst Card = (props) => {\n  const iconURL = `https://openweathermap.org/img/wn/${props.icon}@2x.png`;\n  const weatherDescription = props.description;\n  return (\n    <>\n      <Box borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" boxShadow=\"xl\">\n        <Box p=\"5\">\n          <HStack>\n            <MdLocationOn />\n            <Heading as=\"h2\" size=\"sm\" fontWeight=\"extrabold\">\n              {props.cityName}, {props.countryName}\n            </Heading>\n          </HStack>\n          <Text fontSize=\"sm\" color=\"black.500\" pt=\"4\">\n            {weatherDescription.toUpperCase()}\n          </Text>\n          <HStack>\n            <Image src={iconURL} alt=\"weather icon\" />\n            <Heading as=\"h3\" size=\"2xl\" fontWeight=\"light\" isTruncated>\n              {props.temp}°C\n            </Heading>\n          </HStack>\n          <HStack>\n            <HStack>\n              <FaTemperatureLow />\n              <Text fontSize=\"md\">Min:</Text>\n              <Text fontSize=\"md\" fontWeight=\"bold\">\n                {props.tempMin} °C\n              </Text>\n            </HStack>\n            <Spacer />\n            <HStack>\n              <FaTemperatureHigh />\n              <Text fontSize=\"md\">Max:</Text>\n              <Text fontSize=\"md\" fontWeight=\"bold\">\n                {props.tempMax} °C\n              </Text>\n            </HStack>\n          </HStack>\n          <Divider pt=\"4\" />\n          <HStack pt=\"4\">\n            <RiCloudyFill />\n            <Text fontSize=\"md\">Feels Like</Text>\n            <Spacer />\n            <Text fontSize=\"md\" fontWeight=\"bold\">\n              {props.feelsLike} °C\n            </Text>\n          </HStack>\n          <HStack pt=\"4\">\n            <IoIosSpeedometer />\n            <Text fontSize=\"md\">Pressure</Text>\n            <Spacer />\n            <Text fontSize=\"md\" fontWeight=\"bold\">\n              {props.pressure} mbar\n            </Text>\n          </HStack>\n          <HStack pt=\"4\">\n            <RiDropFill />\n            <Text fontSize=\"md\">Humidity</Text>\n            <Spacer />\n            <Text fontSize=\"md\" fontWeight=\"bold\">\n              {props.humidity}%\n            </Text>\n          </HStack>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Box, Text, Link } from '@chakra-ui/react';\nimport { ExternalLinkIcon } from '@chakra-ui/icons';\n\nconst Footer = () => {\n  return (\n    <Box p=\"2\">\n      <Text>\n        Made with ♥ by{' '}\n        <Link href=\"https://github.com/singhstym\" isExternal>\n          Satyam Singh\n          <ExternalLinkIcon mx=\"2px\" />\n        </Link>\n      </Text>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport {\n  Heading,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  Stack,\n  VStack,\n  SimpleGrid,\n  Box,\n  Button,\n} from '@chakra-ui/react';\nimport Card from './Card';\nimport Footer from './Footer';\n\nconst Home = () => {\n  const [locationName, setLocationName] = useState('');\n  const [locationsData, setLocationData] = useState([]);\n\n  const getWeather = async () => {\n    try {\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?appid=${process.env.REACT_APP_APP_ID}&q=${locationName}&units=metric`\n      );\n      setLocationData((locationsData) => [response.data, ...locationsData]);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    getWeather();\n    setLocationName('');\n  };\n\n  return (\n    <VStack py=\"4\">\n      <Heading as=\"h1\" size=\"2xl\" lineHeight=\"taller\">\n        Weather App\n      </Heading>\n      <Box w={['95%', '90%', '70%', '60%', '40%']}>\n        <form onSubmit={handleSubmit}>\n          <Stack direction={['column', 'column', 'row']}>\n            <InputGroup size=\"lg\">\n              <InputLeftAddon children=\"Location\" />\n              <Input\n                type=\"text\"\n                value={locationName}\n                onChange={(e) => setLocationName(e.target.value)}\n                required\n                autoFocus\n              />\n            </InputGroup>\n            <Button type=\"submit\" colorScheme=\"blue\" size=\"lg\">\n              Get Weather\n            </Button>\n          </Stack>\n        </form>\n      </Box>\n      <Box w={['95%', '90%', '90%', '80%']}>\n        <SimpleGrid columns={[1, 1, 2, 2, 3]} spacing={[5, 5, 10]} mt=\"5\">\n          {locationsData.map((locationData) => (\n            <Card\n              key={locationData.id}\n              cityName={locationData.name}\n              countryName={locationData.sys.country}\n              temp={locationData.main.temp}\n              feelsLike={locationData.main.feels_like}\n              tempMin={locationData.main.temp_min}\n              tempMax={locationData.main.temp_max}\n              pressure={locationData.main.pressure}\n              humidity={locationData.main.humidity}\n              description={locationData.weather[0].description}\n              icon={locationData.weather[0].icon}\n            />\n          ))}\n        </SimpleGrid>\n      </Box>\n      <Footer />\n    </VStack>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { ChakraProvider, theme } from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <ColorModeSwitcher justifySelf=\"flex-end\" />\n      <Home />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}